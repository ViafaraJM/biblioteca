image: docker:20.10.7

services:
  - postgres:13

variables:
  POSTGRES_USER: "postgres"
  POSTGRES_PASSWORD: "Sebas1774"
  POSTGRES_DB: "biblioteca"
  POSTGRES_HOST: "postgres"
  POSTGRES_PORT: "5432"

stages:
  - test
  - build
  - deploy

test:
  stage: test
  script:
    - docker build -t myproject-testing:latest -f Dockerfile.testing .
    - docker run --rm -v $(pwd):/app -e DATABASE_URL=postgres://$POSTGRES_USER:$POSTGRES_PASSWORD@$POSTGRES_HOST:$POSTGRES_PORT/$POSTGRES_DB myproject-testing:latest
  coverage: '/TOTAL.*\s+(\d+\%)/'

build:
  stage: build
  script:
    - docker build -t myproject:latest .
    - docker save myproject:latest -o myproject.tar
  artifacts:
    paths:
      - myproject.tar

deploy_production:
  stage: deploy
  script:
    - docker load -i myproject.tar
    - docker run --rm -d --name myproject -p 8000:8000 -v $(pwd):/app -e DATABASE_URL=postgres://$POSTGRES_USER:$POSTGRES_PASSWORD@$POSTGRES_HOST:$POSTGRES_PORT/$POSTGRES_DB myproject:latest
  only:
    - master

deploy_testing:
  stage: deploy
  script:
    - docker build -t myproject-testing:latest -f Dockerfile.testing .
    - docker run --rm -d --name myproject-testing -p 8000:8000 -v $(pwd):/app -e DATABASE_URL=postgres://$POSTGRES_USER:$POSTGRES_PASSWORD@$POSTGRES_HOST:$POSTGRES_PORT/$POSTGRES_DB myproject-testing:latest
  only:
    - develop